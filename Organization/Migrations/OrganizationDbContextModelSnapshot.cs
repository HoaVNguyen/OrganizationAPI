// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Organization.Infrastructure;

#nullable disable

namespace Organization.Migrations
{
    [DbContext(typeof(OrganizationDbContext))]
    partial class OrganizationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeTeam", b =>
                {
                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsTeamId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesEmployeeId", "TeamsTeamId");

                    b.HasIndex("TeamsTeamId");

                    b.ToTable("EmployeeTeam");

                    b.HasData(
                        new
                        {
                            EmployeesEmployeeId = 1,
                            TeamsTeamId = 1
                        },
                        new
                        {
                            EmployeesEmployeeId = 2,
                            TeamsTeamId = 1
                        },
                        new
                        {
                            EmployeesEmployeeId = 2,
                            TeamsTeamId = 2
                        },
                        new
                        {
                            EmployeesEmployeeId = 3,
                            TeamsTeamId = 2
                        },
                        new
                        {
                            EmployeesEmployeeId = 4,
                            TeamsTeamId = 1
                        },
                        new
                        {
                            EmployeesEmployeeId = 4,
                            TeamsTeamId = 3
                        });
                });

            modelBuilder.Entity("Organization.Domain.Entity.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("OfficeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Age = 20,
                            FirstName = "Hoa",
                            LastName = "Nguyen",
                            OfficeId = 4
                        },
                        new
                        {
                            EmployeeId = 2,
                            Age = 21,
                            FirstName = "Alex",
                            LastName = "Brodsky",
                            OfficeId = 4
                        },
                        new
                        {
                            EmployeeId = 3,
                            Age = 47,
                            FirstName = "Some",
                            LastName = "Guy",
                            OfficeId = 1
                        },
                        new
                        {
                            EmployeeId = 4,
                            Age = 33,
                            FirstName = "Hans",
                            LastName = "Neuenhaus",
                            OfficeId = 4
                        });
                });

            modelBuilder.Entity("Organization.Domain.Entity.Office", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParishId")
                        .HasColumnType("int");

                    b.HasKey("OfficeId");

                    b.HasIndex("ParishId")
                        .IsUnique();

                    b.ToTable("Office");

                    b.HasData(
                        new
                        {
                            OfficeId = 1,
                            Name = "Diamond Nails",
                            ParishId = 1
                        },
                        new
                        {
                            OfficeId = 2,
                            Name = "Atlas",
                            ParishId = 2
                        },
                        new
                        {
                            OfficeId = 3,
                            Name = "CGI",
                            ParishId = 4
                        },
                        new
                        {
                            OfficeId = 4,
                            Name = "OTS/PMO",
                            ParishId = 3
                        });
                });

            modelBuilder.Entity("Organization.Domain.Entity.Parish", b =>
                {
                    b.Property<int>("ParishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParishId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("ParishId");

                    b.ToTable("Parish");

                    b.HasData(
                        new
                        {
                            ParishId = 1,
                            Name = "Vermillion",
                            ZipCode = 70510
                        },
                        new
                        {
                            ParishId = 2,
                            Name = "Laffyette",
                            ZipCode = 70508
                        },
                        new
                        {
                            ParishId = 3,
                            Name = "East Baton Rouge",
                            ZipCode = 70808
                        },
                        new
                        {
                            ParishId = 4,
                            Name = "Ascension",
                            ZipCode = 70346
                        });
                });

            modelBuilder.Entity("Organization.Domain.Entity.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            Description = "For cool people only.",
                            Name = "Cool Team"
                        },
                        new
                        {
                            TeamId = 2,
                            Description = "For lame people >:)",
                            Name = "Lame Team"
                        },
                        new
                        {
                            TeamId = 3,
                            Description = "A team just for Hans",
                            Name = "Just Hans"
                        });
                });

            modelBuilder.Entity("EmployeeTeam", b =>
                {
                    b.HasOne("Organization.Domain.Entity.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Organization.Domain.Entity.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Organization.Domain.Entity.Employee", b =>
                {
                    b.HasOne("Organization.Domain.Entity.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeId");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Organization.Domain.Entity.Office", b =>
                {
                    b.HasOne("Organization.Domain.Entity.Parish", "Parish")
                        .WithOne("Office")
                        .HasForeignKey("Organization.Domain.Entity.Office", "ParishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parish");
                });

            modelBuilder.Entity("Organization.Domain.Entity.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Organization.Domain.Entity.Parish", b =>
                {
                    b.Navigation("Office");
                });
#pragma warning restore 612, 618
        }
    }
}
